/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.prova_continuada;

/**
 *
 * @author castr
 */
public class TelaProva extends javax.swing.JFrame {
        
    Integer conBtnDisco = 0;
    Integer conBtnCpu = 0;
    Integer conBtnMem = 0;
    
    Integer maxDisco = 0;
    Integer minDisco = 100;
    Integer totDisco = 0;
    
    Double maxCpu = 250.0;
    Double minCpu = 390.0;
    Double totCpu = 0.0;
    
    Double maxMemoria = 0.0;
    Double minMemoria = 8.0;
    Double totMemoria = 0.0;

    /**
     * Creates new form TelaProva
     */
    public TelaProva() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        prgBarCpu = new javax.swing.JProgressBar();
        prgBarDisco = new javax.swing.JProgressBar();
        prgBarMemoria = new javax.swing.JProgressBar();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnLeitura = new javax.swing.JButton();
        lblMaxCpu = new javax.swing.JLabel();
        lblMinCpu = new javax.swing.JLabel();
        lblMedCpu = new javax.swing.JLabel();
        lblMaxDisco = new javax.swing.JLabel();
        lblMinDisco = new javax.swing.JLabel();
        lblMedDisco = new javax.swing.JLabel();
        lblMaxMemoria = new javax.swing.JLabel();
        lblMinMemoria = new javax.swing.JLabel();
        lblMedMemoria = new javax.swing.JLabel();
        lblMedMemoria2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("CPU:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 12, -1, -1));
        getContentPane().add(prgBarCpu, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 38, 275, -1));
        getContentPane().add(prgBarDisco, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 102, 275, -1));
        getContentPane().add(prgBarMemoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 164, 275, -1));

        jLabel2.setText("Disco:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 76, -1, -1));

        jLabel3.setText("Memória:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 138, -1, -1));

        btnLeitura.setText("Leitura de Dados");
        btnLeitura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeituraActionPerformed(evt);
            }
        });
        getContentPane().add(btnLeitura, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 210, -1, -1));

        lblMaxCpu.setText("Máximo:");
        getContentPane().add(lblMaxCpu, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 40, -1, -1));

        lblMinCpu.setText("Minimo:");
        getContentPane().add(lblMinCpu, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 40, -1, -1));

        lblMedCpu.setText("Média:");
        getContentPane().add(lblMedCpu, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 40, 90, -1));

        lblMaxDisco.setText("Máximo:");
        getContentPane().add(lblMaxDisco, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 100, -1, -1));

        lblMinDisco.setText("Minimo:");
        getContentPane().add(lblMinDisco, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 100, -1, -1));

        lblMedDisco.setText("Média:");
        getContentPane().add(lblMedDisco, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 100, 90, -1));

        lblMaxMemoria.setText("Máximo:");
        getContentPane().add(lblMaxMemoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 160, -1, -1));

        lblMinMemoria.setText("Minimo:");
        getContentPane().add(lblMinMemoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 160, -1, -1));

        lblMedMemoria.setText("Média:");
        getContentPane().add(lblMedMemoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 160, 90, -1));

        lblMedMemoria2.setText("Informações do sistema");
        getContentPane().add(lblMedMemoria2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 260, 140, -1));

        jButton1.setText("Reiniciar Leituras");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 230, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //faz o calculo do Disco
    
    public void calcDisco (Integer numerin){
        conBtnDisco ++;
        totDisco += numerin;
        
        Integer mediaDisco = totDisco/conBtnDisco;
        
        if(numerin > maxDisco){
            maxDisco = numerin;
            lblMaxDisco.setText(String.format("Máximo: %dGB", maxDisco));
        }
        
        if(numerin < minDisco){
            minDisco = numerin;
            lblMinDisco.setText(String.format("Mínimo: %dGB", minDisco));
        }
        
        lblMedDisco.setText(String.format("Média: %dGB", mediaDisco));
    }
    
    
    
    //faz o calculo da CPU
    
    public void calcCpu (Double numerin){
        conBtnCpu ++;
        totCpu += numerin;
        
        Double mediaCpu = totCpu/conBtnCpu;
        
        if(numerin > maxCpu){
            maxCpu = numerin;
            lblMaxCpu.setText(String.format("Máximo: %.1fGB", maxCpu));
        }
        
        if(numerin < minCpu){
            minCpu = numerin;
            lblMinCpu.setText(String.format("Mínimo: %.1fGB", minCpu));
        }
        
        lblMedCpu.setText(String.format("Média: %.1fGB", mediaCpu));
    }
    
    
    
     //faz o calculo da Memória
    
    public void calcMemoria (Double numerin){
        conBtnMem ++;
        totMemoria += numerin;
        
        Double mediaMemoria = totMemoria/conBtnMem;
        
        if(numerin > maxMemoria){
            maxMemoria = numerin;
            lblMaxMemoria.setText(String.format("Máximo: %.1fGB", maxMemoria));
        }
        
        if(numerin < minMemoria){
            minMemoria = numerin;
            lblMinMemoria.setText(String.format("Mínimo: %.1fGB", minMemoria));
        }
        
        lblMedMemoria.setText(String.format("Média: %.1fGB", mediaMemoria));
    }
    
    
    private void btnLeituraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeituraActionPerformed
        Numero numero = new Numero();
        
        calcDisco(numero.numeroDisco);
        calcCpu(numero.numeroCpu);
        calcMemoria(numero.numeroMemoria);
        
        //Alimentando as Progress Bars
        
        prgBarCpu.setValue(numero.numeroCpu.intValue());
        prgBarCpu.setMaximum(390);
        prgBarCpu.setMinimum(250);
        prgBarCpu.setStringPainted(true);
        prgBarCpu.setString(String.format("%.1fHz", numero.numeroCpu));
        
        prgBarDisco.setValue(numero.numeroDisco);
        prgBarDisco.setMaximum(100);
        prgBarDisco.setMinimum(0);
        prgBarDisco.setStringPainted(true);
        prgBarDisco.setString(String.format("%dGB", numero.numeroDisco));
        
        prgBarMemoria.setValue(numero.numeroMemoria.intValue());
        prgBarMemoria.setMaximum(8);
        prgBarMemoria.setMinimum(0);
        prgBarMemoria.setStringPainted(true);
        prgBarMemoria.setString(String.format("%.1fGB", numero.numeroMemoria));
        
    }//GEN-LAST:event_btnLeituraActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        conBtnDisco = 0;
        conBtnCpu = 0;
        conBtnMem = 0;
    
        maxDisco = 0;
        minDisco = 100;
        totDisco = 0;
    
        maxCpu = 250.0;
        minCpu = 390.0;
        totCpu = 0.0;
    
        maxMemoria = 0.0;
        minMemoria = 8.0;
        totMemoria = 0.0;
        
        prgBarMemoria.setString("0GB");
        prgBarMemoria.setValue(0);
        
        prgBarDisco.setString("0GB");
        prgBarDisco.setValue(0);
        
        prgBarCpu.setString("0Hz");
        prgBarCpu.setValue(0);
        
        lblMaxCpu.setText("Máximo:");
        lblMaxDisco.setText("Máximo:");
        lblMaxMemoria.setText("Máximo:");
        
        lblMinCpu.setText("Mínimo:");
        lblMinDisco.setText("Mínimo:");
        lblMinMemoria.setText("Mínimo:");
        
        lblMedCpu.setText("Média:");
        lblMedDisco.setText("Média:");
        lblMedMemoria.setText("Média:");
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaProva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaProva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaProva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaProva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaProva().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLeitura;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblMaxCpu;
    private javax.swing.JLabel lblMaxDisco;
    private javax.swing.JLabel lblMaxMemoria;
    private javax.swing.JLabel lblMedCpu;
    private javax.swing.JLabel lblMedDisco;
    private javax.swing.JLabel lblMedMemoria;
    private javax.swing.JLabel lblMedMemoria2;
    private javax.swing.JLabel lblMinCpu;
    private javax.swing.JLabel lblMinDisco;
    private javax.swing.JLabel lblMinMemoria;
    private javax.swing.JProgressBar prgBarCpu;
    private javax.swing.JProgressBar prgBarDisco;
    private javax.swing.JProgressBar prgBarMemoria;
    // End of variables declaration//GEN-END:variables
}
